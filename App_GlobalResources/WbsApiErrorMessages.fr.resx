<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Default" xml:space="preserve">
    <value>Code erreur:</value>
  </data>
  <data name="ERC_10014" xml:space="preserve">
    <value>La date d'arrivée de la réservation est dans le passée</value>
  </data>
  <data name="ERC_105" xml:space="preserve">
    <value>La demande de réservation n'a pas pu être localisé avec les informations fournies</value>
  </data>
  <data name="ERC_106" xml:space="preserve">
    <value>Date de check-in ou check-out invalide (code 106)</value>
  </data>
  <data name="ERC_119" xml:space="preserve">
    <value>Le nombre de chambres demandées pour ce type de chambres n'est pas disponible (code 119)</value>
  </data>
  <data name="ERC_115" xml:space="preserve">
    <value>Le niveau minimum d'occupation n'a pas été atteint (code 115)</value>
  </data>
  <data name="ERC_116" xml:space="preserve">
    <value>Le niveau maximum d'occupation a été dépassé (code 116)</value>
  </data>
  <data name="ERC_117" xml:space="preserve">
    <value>Le nombre de séjours minimum n'a pas été atteint (code 117)</value>
  </data>
  <data name="ERC_118" xml:space="preserve">
    <value>le nombre de séjours maximum a été dépassé (code 118)</value>
  </data>
  <data name="ERC_120" xml:space="preserve">
    <value>Ce tarif n'est pas disponible pour le nombre de personne demandée (code 120)</value>
  </data>
  <data name="ERC_121" xml:space="preserve">
    <value>Il n'y a pas de tarif disponible pour les dates demandées (code 121)</value>
  </data>
  <data name="ERC_129" xml:space="preserve">
    <value>Les coordonnées bancaires renseignées sont incorrectes (code 129)</value>
  </data>
  <data name="ERC_132" xml:space="preserve">
    <value>L'extra en add-on demandé n'est pas disponible (code132)</value>
  </data>
  <data name="ERC_133" xml:space="preserve">
    <value>La demande de réservation en avance n'a pas été atteinte (code 133)</value>
  </data>
  <data name="ERC_135" xml:space="preserve">
    <value>Le prépaiement n'a pas pu être effectué (code 135)</value>
  </data>
  <data name="ERC_148" xml:space="preserve">
    <value>Le profil demandé n'a pas pu être localisé (code 148)</value>
  </data>
  <data name="ERC_WBSAPIGateway" xml:space="preserve">
    <value>Un incident est survenu lors du processus de réservation. Merci de ne pas ré-essayer si le prépaiement était en cours, et de contacter directement l'hôtel.</value>
  </data>
</root>